apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.tencent.tinker.patch'
apply from: 'tinker-support.gradle'

// 版本号
def now = Calendar.getInstance()
def year = now.get(Calendar.YEAR) % 1000
def month = now.get(Calendar.MONTH) + 1
def date = now.get(Calendar.DATE)
def appVersionCode = Integer.valueOf(String.format("%02d%02d%02d", year, month, date))

// 版本名
def appVersionName = "1.2.1"

// bugly AppId
def buglyAppId = System.getenv("CLASSSCHEDULEAPPID") ?: ""

// 本地签名配置
def keyPropertiesFile = file("key.properties")
def keyProperties = keyPropertiesFile.exists() ? new Properties() : null
if (keyProperties != null) {
// 有签名配置情况下优先使用配置文件
    keyProperties.load(new FileInputStream(keyPropertiesFile))
}

android {

    signingConfigs {
        release {
            if (keyProperties!=null){
                keyAlias keyProperties["release.keyName"]
                keyPassword keyProperties["release.keyPassword"]
                storeFile file(keyProperties["keystorePath"])
                storePassword keyProperties["keystorePassword"]
            }else {
                // 签名文件密码以环境变量形式传入
                keyAlias System.getenv("KEYRELEASENAME")
                keyPassword System.getenv("KEYRELEASEPASSWORD")
                storeFile file(System.getenv("AGENT_TEMPDIRECTORY") + "/" + System.getenv("KEYSTOREFILE"))
                storePassword System.getenv("KEYSTOREPASSWORD")
            }
        }
        debug {
            if (keyProperties!=null){
                keyAlias keyProperties["debug.keyName"]
                keyPassword keyProperties["debug.keyPassword"]
                storeFile file(keyProperties["keystorePath"])
                storePassword keyProperties["keystorePassword"]
            }else {
                // 签名文件密码以环境变量形式传入
                keyAlias System.getenv("KEYDEBUGNAME")
                keyPassword System.getenv("KEYDEBUGPASSWORD")
                storeFile file(System.getenv("AGENT_TEMPDIRECTORY") + "/" + System.getenv("KEYSTOREFILE"))
                storePassword System.getenv("KEYSTOREPASSWORD")
            }
        }
    }
    defaultConfig {
        compileSdkVersion rootProject.compileSdkVersion
        applicationId "com.wp.csmu.classschedule"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName + "_" + appVersionCode
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            buildConfigField "String", "APPID", "\"$buglyAppId\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "String", "APPID", "\"$buglyAppId\""
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.github.NashLegend:AnyPref:1.2.6'
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.5.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.14.10'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.google.android.material:material:1.4.0-alpha01'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okio:okio:2.10.0'
    implementation 'com.zhuangfei:TimetableView:2.0.6'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-beta02'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3-native-mt'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.preference:preference:1.1.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.squareup.leakcanary:leakcanary-android:1.6.1"
}
repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}